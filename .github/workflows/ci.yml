name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - "**"

jobs:
  build-processor:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: processor

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20.9.0"

      - name: Install dependencies
        run: npm ci

      - name: ESLint check
        run: npm run lint

      - name: Prettier check
        run: npm run prettier:check

      - name: Build project
        run: npm run build

      - name: Run tests
        run: npm run test

      - name: Python setup
        if: always()
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: TestRail CLI upload results
        env:
          TR_INSTANCE: ${{ secrets.TR_INSTANCE }}
          TR_PROJECT_NAME: ${{ secrets.TR_PROJECT_NAME }}
          TR_USER_EMAIL: ${{ secrets.TR_USER_EMAIL }}
          TR_PASSWORD: ${{ secrets.TR_PASSWORD }}
        if: always()
        run: |
          pip install trcli
          trcli -y \
            -h "https://$TR_INSTANCE.testrail.io" \
            --project "$TR_PROJECT_NAME" \
            -u $TR_USER_EMAIL \
            -p $TR_PASSWORD \
            parse_junit \
            --title "Automated Tests - ${{ github.sha }}" \
            --run-description ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} \
            -f "junit-report.xml"

      - name: Run audit
        run: npm audit

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}